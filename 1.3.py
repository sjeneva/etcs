import requests
import html2text
import os

# Ensure there's a directory to store the files
output_dir = "Korea_KLN_ESG_extracted_articles"
os.makedirs(output_dir, exist_ok=True)


def extract_specific_part_from_text(text, start_marker, end_marker):
    start_index = text.find(start_marker)
    end_index = text.find(end_marker, start_index) + len(end_marker)
    if start_index != -1 and end_index != -1:
        return text[start_index:end_index]
    return "Content not found."


def extract_text_from_url(url):
    response = requests.get(url)
    response.raise_for_status()  # Raise an error for bad responses (4xx, 5xx)
    full_text = html2text.html2text(response.text)
    return full_text


base_url = ' https://www.klnews.co.kr/news/articleView.html?idxno='

article_partial_urls = [

"311683",	"311661",	"311637",	"311592",	"311488",	"311448",	"311440",	"311410",	"311400",	"311342",	"311332",	"311319",	"311311",	"311287",	"311282",	"311278",	"311265",	"311250",	"311241",	"311234",	"311203",	"311184",	"311039",	"311027",	"311018",	"311015",	"310928",	"310916",	"310921",	"310876",	"310844",	"310826",	"310792",	"310788",	"310738",	"310741",	"310736",	"310718",	"310715",	"310696",	"310683",	"310672",	"310671",	"310655",	"310636",	"310630",	"310612",	"310609",	"310575",	"310558",	"310554",	"310517",	"310516",	"310504",	"310503",	"310502",	"310500",	"310496",	"310493",	"310482",	"310475",	"310474",	"310473",	"310471",	"310461",	"310424",	"310411",	"310401",	"310398",	"310394",	"310392",	"310379",	"310349",	"310348",	"310345",	"310332",	"310325",	"310309",	"310288",	"310286",	"310281",	"310267",	"310265",	"310260",	"310237",	"310220",	"310218",	"310200",	"310165",	"310156",	"310077",	"310076",	"310074",	"310055",	"310057",	"310050",	"310044",	"310018",	"310006",	"310007",	"310001",	"309981",	"309973",	"309969",	"309965",	"309961",	"309957",	"309947",	"309944",	"309937",	"309933",	"309907",	"309899",	"309893",	"309880",	"309871",	"309866",	"309864",	"309853",	"309821",	"309820",	"309804",	"309803",	"309802",	"309800",	"309799",	"309798",	"309796",	"309795",	"309794",	"309776",	"309774",	"309767",	"309758",	"309741",	"309723",	"309654",	"309644",	"309640",	"309639",	"309631",	"309622",	"309592",	"309574",	"309573",	"309570",	"309489",	"309487",	"309480",	"309479",	"309474",	"309470",	"309442",	"309416",	"309407",	"309405",	"309402",	"309394",	"309392",	"309385",	"309373",	"309355",	"309353",	"309346",	"309300",	"309298",	"309290",	"309253",	"309250",	"309245",	"309236",	"309235",	"309227",	"309226",	"309215",	"309214",	"309197",	"309186",	"309179",	"309178",	"309147",	"309146",	"309139",	"309104",	"309093",	"309064",	"309056",	"309038",	"309034",	"309007",	"308998",	"308992",	"308988",	"308967",	"308963",	"308962",	"308928",	"308898",	"308896",	"308893",	"308890",	"308885",	"308879",	"308872",	"308861",	"308851",	"308846",	"308841",	"308827",	"308819",	"308814",	"308809",	"308807",	"308789",	"308779",	"308749",	"308744",	"308710",	"308678",	"308671",	"308665",	"308664",	"308660",	"308639",	"308613",	"308579",	"308575",	"308571",	"308552",	"308528",	"308502",	"308489",	"308487",	"308468",	"308452",	"308446",	"308432",	"308415",	"308372",	"308359",	"308315",	"308310",	"308306",	"308303",	"308282",	"308245",	"308234",	"308233",	"308231",	"308221",	"308218",	"308213",	"308211",	"308205",	"308204",	"308198",	"308174",	"308150",	"308155",	"308151",	"308152",	"308145",	"308140",	"308120",	"308118",	"308092",	"308050",	"308041",	"308025",	"308015",	"307993",	"307985",	"307966",	"307957",	"307944",	"307939",	"307918",	"307914",	"307909",	"307896",	"307893",	"307885",	"307881",	"307865",	"307862",	"307831",	"307825",	"307816",	"307811",	"307808",	"307804",	"307791",	"307775",	"307772",	"307734",	"307733",	"307719",	"307708",	"307701",	"307664",	"307662",	"307649",	"307638",	"307634",	"307622",	"307620",	"307606",	"307602",	"307595",	"307566",	"307543",	"307528",	"307514",	"307507",	"307480",	"307479",	"307460",	"307456",	"307441",	"307388",	"307376",	"307358",	"307356",	"307313",	"307297",	"307281",	"307269",	"307273",	"307263",	"307259",	"307238",	"307162",	"307116",	"307079",	"307009",	"306908",	"306901",	"306879",	"306873",	"306858",	"306839",	"306820",	"306800",	"306799",	"306790",	"306788",	"306777",	"306765",	"306764",	"306720",	"306709",	"306705",	"306697",	"306685",	"306673",	"306664",	"306657",	"306655",	"306654",	"306651",	"306647",	"306625",	"306623",	"306621",	"306603",	"306602",	"306577",	"306556",	"306551",	"306527",	"306510",	"306501",	"306495",	"306491",	"306482",	"306480",	"306473",	"306466",	"306459",	"306438",	"306425",	"306414",	"306409",	"306401",	"306378",	"306373",	"306369",	"306360",	"306358",	"306354",	"306346",	"306345",	"306333",	"306312",	"306295",	"306291",	"306289",	"306288",	"306273",	"306257",	"306240",	"306216",	"306214",	"306208",	"306201",	"306193",	"306182",	"306172",	"306165",	"306150",	"306118",	"306110",	"306094",	"306086",	"306076",	"306068",	"306045",	"306033",	"306024",	"306020",	"306008",	"305971",	"305969",	"305965",	"305948",	"305942",	"305937",	"305931",	"305898",	"305881",	"305876",	"305852",	"305840",	"305836",	"305833",	"305832",	"305827",	"305811",	"305796",	"305765",	"305762",	"305700",	"305695",	"305678",	"305666",	"305604",	"305599",	"305598",	"305566",	"305562",	"305561",	"305542",	"305510",	"305488",	"305486",	"305468",	"305450",	"305448",	"305446",	"305437",	"305433",	"305418",	"305396",	"305391",	"305385",	"305362",	"305353",	"305344",	"305321",	"305300",	"305294",	"305290",	"305278",	"305274",	"305254",	"305240",	"305224",	"305211",	"305195",	"305167",	"305154",	"305151",	"305147",	"305146",	"305128",	"305115",	"305112",	"305096",	"305092",	"305071",	"305051",	"305050",	"305049",	"305042",	"305039",	"305035",	"305021",	"305019",	"305010",	"305008",	"304995",	"304988",	"304955",	"304930",	"304927",	"304921",	"304920",	"304915",	"304902",	"304899",	"304892",	"304887",	"304877",	"304866",	"304826",	"304808",	"304790",	"304773",	"304750",	"304747",	"304704",	"304682",	"304681",	"304666",	"304652",	"304648",	"304643",	"304636",	"304637",	"304627",	"304623",	"304620",	"304614",	"304609",	"304603",	"304602",	"304599",	"304574",	"304565",	"304562",	"304545",	"304499",	"304491",	"304475",	"304472",	"304454",	"304452",	"304451",	"304440",	"304416",	"304410",	"304403",	"304400",	"304397",	"304393",	"304388",	"304372",	"304346",	"304341",	"304332",	"304323",	"304315",	"304313",	"304306",	"304303",	"304285",	"304278",	"304251",	"304248",	"304237",	"304232",	"304221",	"304210",	"304199",	"304193",	"304167",	"304165",	"304160",	"304152",	"304137",	"304133",	"304103",	"304091",	"304042",	"304040",	"304035",	"303990",	"303981",	"303942",	"303926",	"303861",	"303860",	"303846",	"303823",	"303817",	"303816",	"303812",	"303809",	"303772",	"303767",	"303760",	"303759",	"303747",	"303739",	"303731",	"303722",	"303720",	"303702",	"303694",	"303690",	"303688",	"303677",	"303649",	"303641",	"303616",	"303609",	"303605",	"303593",	"303592",	"303556",	"303542",	"303539",	"303530",	"303510",	"303505",	"303495",	"303493",	"303492",	"303481",	"303480",	"303468",	"303460",	"303457",	"303455",	"303448",	"303440",	"303428",	"303426",	"303417",	"303394",	"303387",	"303365",	"303364",	"303357",	"303329",	"303318",	"303317",	"303287",	"303284",	"303272",	"303261",	"303258",	"303244",	"303229",	"303210",	"303184",	"303156",	"303153",	"303144",	"303132",	"303131",	"303123",	"303092",	"303079",	"303034",	"303030",	"303025",	"303001",	"302997",	"302994",	"302990",	"302989",	"302978",	"302971",	"302958",	"302947",	"302935",	"302932",	"302902",	"302896",	"302895",	"302894",	"302893",	"302892",	"302891",	"302890",	"302889",	"302888",	"302887",	"302886",	"302885",	"302884",	"302879",	"302874",	"302871",	"302859",	"302852",	"302851",	"302844",	"302843",	"302840",	"302839",	"302829",	"302828",	"302826",	"302818",	"302817",	"302806",	"302803",	"302796",	"302792",	"302790",	"302771",	"302763",	"302752",	"302751",	"302741",	"302733",	"302727",	"302723",	"302720",	"302714",	"302701",	"302665",	"302660",	"302631",	"302630",	"302625",	"302615",	"302576",	"302548",	"302503",	"302502",	"302485",	"302457",	"302447",	"302433",	"302430",	"302428",	"302427",	"302409",	"302402",	"302399",	"302392",	"302385",	"302372",	"302307",	"302297",	"302296",	"302285",	"302265",	"302225",	"302222",	"302219",	"302217",	"302208",	"302193",	"302192",	"302191",	"302190",	"302189",	"302188",	"302187",	"302185",	"302179",	"302158",	"302156",	"302149",	"302141",	"302131",	"302130",	"302129",	"302117",	"302115",	"302109",	"302106",	"302105",	"302088",	"302085",	"302061",	"302059",	"302022",	"302011",	"301968",	"301961",	"301952",	"301949",	"301945",	"301941",	"301935",	"301926",	"301913",	"301903",	"301891",	"301865",	"301863",	"301859",	"301849",	"301809",	"301773",	"301759",	"301764",	"301730",	"301728",	"301702",	"301633",	"301591",	"301584",	"301572",	"301546",	"301541",	"301528",	"301492",	"301483",	"301480",	"301464",	"301462",	"301439",	"301401",	"301369",	"301366",	"301356",	"301351",	"301350",	"301325",	"301319",	"301312",	"301294",	"301271",	"301268",	"301228",	"301226",	"301219",	"301220",	"301195",	"301139",	"301140",	"301080",	"301070",	"301068",	"300983",	"300985",	"300967",	"300913",	"300828",	"300809",	"300790",	"300579",	"300577",	"300395",	"300368",	"300328",	"300236",	"300170",	"122560",	"122546",	"122241",	"122158",	"121666",	"121601",	"113712",	"112159",	"102459",	"96361",	"96351",	"95069",	"83662",	"72273",	"72683",

]

for idx, partial_url in enumerate(article_partial_urls, start=1):
    full_url = base_url + partial_url
    print(f"Extracting content from: {full_url}")
    try:
        article_text = extract_text_from_url(full_url)
        # Extract article ID from URL for filename
        article_id = partial_url.split('=')[-1]
        file_path = os.path.join(output_dir, f"article_{article_id}.txt")

        with open(file_path, 'w', encoding='utf-8') as file:
            file.write(article_text)

        print(f"Content saved to {file_path}")
        print("\n---\n")
    except Exception as e:
        print(f"Failed to extract content from {full_url}. Error: {e}")
        print("\n---\n")